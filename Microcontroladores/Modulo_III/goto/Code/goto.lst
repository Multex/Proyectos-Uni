CCS PCM C Compiler, Version 5.015, 5967               14-Jun-24 15:58

               Filename:   D:\Universidad\Microcontroladores\Modulo_III\Code\goto.lst

               ROM used:   95 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           6 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses xt 
.................... #use delay(clock=4M) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #byte trisb=0x86 
.................... #byte portb=0x06 
.................... #byte trisc=0x87 
.................... #byte portc=0x07 
....................  
.................... #bit PUL1=portb.0 
.................... #bit PUL2=portb.1 
.................... #bit L1=portc.0 
.................... #bit L2=portc.1 
.................... #bit L3=portc.2 
.................... #bit L4=portc.3 
....................  
.................... void main(){ 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
0023:  BCF    03.7
.................... trisb=0b00000011; 
0024:  MOVLW  03
0025:  MOVWF  06
.................... trisc=0b00000000; 
0026:  CLRF   07
.................... portc=0b00000000; 
0027:  BCF    03.5
0028:  CLRF   07
.................... while(true){ 
.................... if(PUL1==1){ 
0029:  BTFSS  06.0
002A:  GOTO   03C
.................... RUTINA1: 
....................  while(true){ 
....................   L1=1; L2=1; L3=1; L4=1; 
002B:  BSF    07.0
002C:  BSF    07.1
002D:  BSF    07.2
002E:  BSF    07.3
....................   delay_ms(100); 
002F:  MOVLW  64
0030:  MOVWF  21
0031:  CALL   004
....................   L1=0; L2=0; L3=0; L4=0; 
0032:  BCF    07.0
0033:  BCF    07.1
0034:  BCF    07.2
0035:  BCF    07.3
....................   delay_ms(100); 
0036:  MOVLW  64
0037:  MOVWF  21
0038:  CALL   004
....................   if(PUL2==1){ 
0039:  BTFSC  06.1
....................     goto RUTINA2; 
003A:  GOTO   03E
....................   } 
003B:  GOTO   02B
....................  } 
.................... } 
.................... if(PUL2==1){ 
003C:  BTFSS  06.1
003D:  GOTO   05D
....................  RUTINA2:            //ETIQUETA DEL GOTO  
....................  while(true){ 
....................   L1=1; L2=0; L3=0; L4=0; 
003E:  BSF    07.0
003F:  BCF    07.1
0040:  BCF    07.2
0041:  BCF    07.3
....................   delay_ms(100); 
0042:  MOVLW  64
0043:  MOVWF  21
0044:  CALL   004
....................   L1=0; L2=1; L3=0; L4=0; 
0045:  BCF    07.0
0046:  BSF    07.1
0047:  BCF    07.2
0048:  BCF    07.3
....................   delay_ms(100); 
0049:  MOVLW  64
004A:  MOVWF  21
004B:  CALL   004
....................   L1=0; L2=0; L3=1; L4=0; 
004C:  BCF    07.0
004D:  BCF    07.1
004E:  BSF    07.2
004F:  BCF    07.3
....................   delay_ms(100); 
0050:  MOVLW  64
0051:  MOVWF  21
0052:  CALL   004
....................   L1=0; L2=0; L3=0; L4=1; 
0053:  BCF    07.0
0054:  BCF    07.1
0055:  BCF    07.2
0056:  BSF    07.3
....................   delay_ms(100); 
0057:  MOVLW  64
0058:  MOVWF  21
0059:  CALL   004
.................... if(PUL1==1){ 
005A:  BTFSC  06.0
....................     goto RUTINA1; 
005B:  GOTO   02B
....................   } 
005C:  GOTO   03E
....................    } 
....................   } 
005D:  GOTO   029
....................  } 
.................... } 
005E:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
